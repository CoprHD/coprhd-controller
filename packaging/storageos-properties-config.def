[
    {
        key : "network_nameservers",
        label : "DNS Servers",
        description : "2-3 DNS servers (IP addresses separated by commas).",
        type : "iplist",
        maxLen : 119,
        userConfigurable : true,
        userMutable : true,
        tag : "Network",
        reconfigRequired : true,
        rebootRequired : false,
        controlNodeOnly : false,
        notifiers : ( "dns" ),
        value : "",
    },
    {
        key : "network_ntpservers",
        label : "NTP Servers",
        description : "2-3 NTP servers (IP addresses separated by commas).",
        type : "iplist",
        maxLen : 119,
        userConfigurable : true,
        userMutable : true,
        tag : "Network",
        reconfigRequired : true,
        rebootRequired : false,
        controlNodeOnly : false,
        notifiers : ( "ntp" ),
        value : "",
    },
    {
        key : "image_server_address",
        label : "Image Server Address",
        description : "FQDN or IP address of the server that serves Compute Images for OS installation during PXE boot process",
        type : "hostname",
        userConfigurable : true,
        userMutable : true,
        tag : "Compute Image Server",
        reconfigRequired : true,
        rebootRequired : true,
        controlNodeOnly : false,
        value : "",
    },
    {
        key : "image_server_os_network_ip",
        label : "OS Install Network Address",
        description : "IP address of the Image Server on the OS install network",
        type : "hostname",
        userConfigurable : true,
        userMutable : true,
        tag : "Compute Image Server",
        reconfigRequired : true,
        rebootRequired : true,
        controlNodeOnly : false,
        value : "",
    },
    {
        key : "image_server_username",
        label : "Username",
        description : "Username to access the Image Server",
        type : "string",
        maxLen : 512,
        userConfigurable : true,
        userMutable : true,
        tag : "Compute Image Server",
        reconfigRequired : true,
        rebootRequired : true,
        controlNodeOnly : false,
        value : "root",
    },
    {
        key : "image_server_encpassword",
        label : "Password",
        description : "Password to access the Image Server",
        type : "encryptedstring",
        userConfigurable : true,
        maxLen : 255,
        userMutable : true,
        advanced : true,
        tag : "Compute Image Server",
        reconfigRequired : true,
        rebootRequired : true,
        controlNodeOnly : false,
        value : "",
    },
    {
        key : "image_server_tftpboot_directory",
        label : "TFTPBOOT Directory",
        description : "Path to TFTP server root directory where the Compute Images will be uploaded",
        type : "string",
        maxLen : 512,
        userConfigurable : true,
        userMutable : true,
        tag : "Compute Image Server",
        reconfigRequired : true,
        rebootRequired : true,
        controlNodeOnly : false,
        value : "/opt/tftpboot/",
    },
    {
        key : "image_server_image_directory",
        label : "Image Directory",
        description : "Directory to store images (relative to TFTPBOOT) on the Image Server",
        type : "string",
        maxLen : 512,
        userConfigurable : false,
        userMutable : true,
        hidden : true,
        tag : "Compute Image Server",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : false,
        value : "images/",
    },
    {
        key : "image_server_http_port",
        label : "HTTP Server Port",
        description : "Port for the HTTP server",
        type : "uint16",
        userConfigurable : false,
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "Compute Image Server",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : false,
        value : "44491",
    },
    {
        key : "image_server_ssh_port",
        label : "SSH Port",
        description : "SSH port for communication with Image Server",
        type : "uint16",
        userConfigurable : false,
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "Compute Image Server",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : false,
        value : "22",
    },
    {
        key : "image_server_ssh_timeout",
        label : "SSH Timeout",
        description : "Timeout value for SSH communication with Image Server (in seconds)",
        type : "uint32",
        userConfigurable : false,
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "Compute Image Server",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : false,
        value : "20",
    },
    {
        key : "image_server_image_import_timeout",
        label : "Image Import Timeout",
        description : "Timeout value for image import (in seconds)",
        type : "uint32",
        userConfigurable : false,
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "Compute Image Server",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : false,
        value : "1800",
    },
    {
        key : "image_server_os_install_timeout",
        label : "OS Install Timeout",
        description : "Timeout value for OS installation (in seconds)",
        type : "uint32",
        userConfigurable : false,
        userMutable : true,
        advanced : true,
        tag : "Compute Image Server",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : false,
        value : "3600",
    },
    {
        key : "image_server_job_polling_interval",
        label : "OS Install Polling Interval",
        description : "OS install polling interval (in seconds)",
        type : "uint32",
        userConfigurable : false,
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "Compute Image Server",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : false,
        value : "60",
    },
    {
        key : "system_update_repo",
        label : "Repository URL",
        description : "URL of the EMC upgrade repository.",
        type : "url",
        maxLen : 512,
        userConfigurable : false,
        userMutable : true,
        advanced : true,
        notifiers : ( "upgrade" ),
        tag : "Upgrade",
        controlNodeOnly : true,
        value : "https://colu.emc.com/soap/rpc",
    },
    {
        key : "system_update_proxy",
        label : "Proxy",
        description : "HTTP/HTTPS proxy required to access the EMC upgrade repository. Leave empty if no proxy is required.",
        type : "string",
        maxLen : 512,
        userConfigurable : false,
        userMutable : true,
        advanced : true,
        notifiers : ( "upgrade" ),
        tag : "Upgrade",
        controlNodeOnly : true,
        value : "",
    },
    {
        key : "system_update_username",
        label : "Username",
        description : "Username to access the EMC upgrade repository.",
        type : "string",
        maxLen : 512,
        userConfigurable : false,
        userMutable : true,
        advanced : true,
        notifiers : ( "upgrade" ),
        tag : "Upgrade",
        controlNodeOnly : true,
        value : "",
     },
     {
        key : "system_update_password",
        label : "Password",
        description : "Password to access the EMC upgrade repository.",
        type : "encryptedstring",
        maxLen : 512,
        userConfigurable : false,
        userMutable : true,
        advanced : true,
        notifiers : ( "upgrade" ),
        tag : "Upgrade",
        controlNodeOnly : true,
        value : "",
    },
    {
        key : "system_update_check_frequency_hours",
        label : "Check Frequency",
        description : "Number of hours between checks for new upgrade versions",
        type : "uint32",
        userConfigurable : false,
        userMutable : true,
        advanced : true,
        notifiers : ( "upgrade" ),
        tag : "Upgrade",
        controlNodeOnly : true,
        value : "24",
    },
    {
        key : "system_connectemc_encrypt",
        label : "Encryption",
        description : "Encrypt ConnectEMC Service data using RSA BSAFE.",
        type : "string",
        allowedValues : ( "yes", "no" ),
        userConfigurable : false,
        userMutable : true,
        advanced : true,
        tag : "ConnectEMC",
        reconfigRequired : true,
        rebootRequired : false,
        notifiers : ( "connectemc" ),
        controlNodeOnly : true,
        value : "yes",
    },
    {
        key : "system_connectemc_transport",
        type : "string",
        userConfigurable : false,
        label : "Transport",
        description : "List of acceptable transport options for ConnectEMC.",
        allowedValues : ( "None", "SMTP", "FTPS" ),
        maxLen : 4,
        userMutable : true,
        advanced : true,
        tag : "ConnectEMC",
        reconfigRequired : true,
        rebootRequired : false,
        notifiers : ( "connectemc" ),
        controlNodeOnly : true,
        value : "FTPS",
    },
    {
        key : "system_connectemc_smtp_server",
        label : "SMTP Server",
        description : "SMTP server or relay for sending email.",
        type : "hostname",
        userMutable : true,
        userConfigurable : false,
        advanced : true,
        tag : "Email",
        reconfigRequired : true,
        rebootRequired : false,
        notifiers : ( "connectemc" ),
        controlNodeOnly : true,
        value : "",
    },
    {
        key : "system_connectemc_smtp_port",
        label : "SMTP Port",
        description : "SMTP server port. If set to 0, the default SMTP port is used (25, or 465 if TLS/SSL is enabled).",
        type : "uint16",
        userMutable : true,
        userConfigurable : false,
        advanced : true,
        tag : "Email",
        reconfigRequired : true,
        rebootRequired : false,
        notifiers : ( "connectemc" ),
        controlNodeOnly : true,
        value : "0",
    },
    {
        key : "system_connectemc_smtp_enabletls",
        label : "Encryption",
        description : "Use TLS/SSL for the SMTP server connections.",
        type : "string",
        allowedValues : ( "yes", "no" ),
        userConfigurable : false,
        userMutable : true,
        advanced : true,
        reconfigRequired : true,
        tag : "Email",
        rebootRequired : false,
        notifiers : ( "connectemc" ),
        controlNodeOnly : true,
        value : "no",
    },
    {
        key : "system_connectemc_smtp_enabletlscert",
        type : "string",
        userConfigurable : false,
        label : "Validate TLS/SSL certificates for SMTP",
        description : "Validate TLS/SSL certificates for the SMTP server connections.",
        maxLen : 3,
        allowedValues : ( "yes", "no" ),
        userMutable : true,
        advanced : true,
        hidden : true,
        tag : "ConnectEMC",
        reconfigRequired : true,
        rebootRequired : false,
        notifiers : ( "connectemc" ),
        controlNodeOnly : true,
        value : "no",
    },
    {
        key : "system_connectemc_smtp_emcto",
        label : "Email Address",
        description : "ConnectEMC service target email address (example: emailalert@emc.com).",
        type : "email",
        maxLen : 255,
        advanced : true,
        hidden : true,
        userConfigurable : false,
        userMutable : true,
        tag : "ConnectEMC",
        reconfigRequired : true,
        rebootRequired : false,
        notifiers : ( "connectemc" ),
        controlNodeOnly : true,
        value : "emailalert@emc.com",
    },
    {
        key : "system_connectemc_smtp_from",
        label : "From Address",
        description : "From email address for sending email messages (user@domain).",
        type : "email",
        userConfigurable : false, 
        maxLen : 255,
        userMutable : true,
        advanced : true,
        tag : "Email",
        reconfigRequired : true,
        rebootRequired : false,
        notifiers : ( "connectemc" ),
        controlNodeOnly : true,
        value : "",
    },
    {
        key : "system_connectemc_smtp_to",
        type : "emaillist",
        userConfigurable : false,
        label : "List of Notification Email Addresses",
        description : "Optional list of email addresses (user@domain) for the ConnectEMC Service notifications (email addresses separated by commas)",
        maxLen : 8192,
        userMutable : true,
        advanced : true,
        tag : "ConnectEMC",
        reconfigRequired : true,
        rebootRequired : false,
        notifiers : ( "connectemc" ),
        controlNodeOnly : true,
        value : "",
    },
    {
        key : "system_connectemc_smtp_authtype",
        type : "string",
        label : "Authentication",
        description : "Authentication type for connecting to the SMTP server.",
        allowedValues : ( "None", "login", "plain", "cram-md5" ),
        userConfigurable : false,
        userMutable : true,
        advanced : true,
        tag : "Email",
        reconfigRequired : true,
        rebootRequired : false,
        notifiers : ( "connectemc" ),
        controlNodeOnly : true,
        value : "None",
    },
    {
        key : "system_connectemc_smtp_username",
        label : "Username",
        description : "Username for authenticating with the SMTP server.",
        type : "string",
        maxLen : 255,
        userConfigurable : false, 
        userMutable : true,
        advanced : true,
        tag : "Email",
        reconfigRequired : true,
        rebootRequired : false,
        notifiers : ( "connectemc" ),
        controlNodeOnly : true,
        value : "",
    },
    {
        key : "system_connectemc_smtp_password",
        type : "string",
        userConfigurable : false,
        label : "Password",
        description : "Password for authenticating with the SMTP server.",
        maxLen : 255,
        userMutable : true,
        advanced : true,
        tag : "Email",
        reconfigRequired : true,
        rebootRequired : false,
        notifiers : ( "connectemc" ),
        controlNodeOnly : true,
        value : "",
    },
    {
        key : "system_connectemc_ftps_hostname",
        type : "hostname",
        userConfigurable : false,
        label : "Hostname",
        description : "ConnectEMC FTPS Hostname",
        userMutable : true,
        advanced : true,
        tag : "ConnectEMC",
        reconfigRequired : true,
        rebootRequired : false,
        notifiers : ( "connectemc" ),
        controlNodeOnly : true,
        value : "corpusfep3.emc.com",
    },
    {
        key : "system_connectemc_ftps_port",
        type : "uint16",
        userConfigurable : false,
        label : "Port",
        description : "ConnectEMC FTPS Port Number",
        userMutable : false,
        advanced : true,
        tag : "ConnectEMC",
        reconfigRequired : true,
        rebootRequired : false,
        notifiers : ( "connectemc" ),
        controlNodeOnly : true,
        value : "990",
    },
    {
        key : "system_connectemc_ftps_username",
        type : "string",
        userConfigurable : false,
        label : "ConnectEMC FTPS username",
        description : "ConnectEMC FTPS username",
        maxLen : 25,
        userMutable : false,
        advanced : true,
        tag : "ConnectEMC",
        reconfigRequired : true,
        rebootRequired : false,
        notifiers : ( "connectemc" ),
        controlNodeOnly : true,
        value : "Default",
    },
    {
        key : "system_connectemc_ftps_password",
        type : "string",
        userConfigurable : false,
        label : "ConnectEMC FTPS password",
        description : "ConnectEMC FTPS password",
        maxLen : 12,
        userMutable : false,
        advanced : true,
        tag : "ConnectEMC",
        reconfigRequired : true,
        rebootRequired : false,
        notifiers : ( "connectemc" ),
        controlNodeOnly : true,
        value : "Default",
    },
    {
        key : "system_connectemc_ftps_fepfolder",
        type : "string",
        userConfigurable : false,
        label : "FTPS FEP folder location",
        description : "FTPS FEP folder location",
        maxLen : 256,
        userMutable : false,
        advanced : true,
        tag : "ConnectEMC",
        reconfigRequired : true,
        rebootRequired : false,
        notifiers : ( "connectemc" ),
        controlNodeOnly : true,
        value : "Default",
    },
    {
        key : "system_root_encpassword",
        label : "Encrypted password for the 'root' account",
        description : "Encrypted (SHA-512) password for the local 'root' account",
        type : "string",
        userConfigurable : false,
        maxLen : 255,
        userMutable : true,
        advanced : true,
        tag : "Security",
        reconfigRequired : true,
        rebootRequired : false,
        notifiers : ( "password" ),
        controlNodeOnly : false,
        value : "$6$eBIu9aQ6$wBnn9Tn.CUuuoi/JZe.oAOmUDIVCqHpXeem7ZHO5R7dPg2hul8tNCBzwumKrFw8A0qm.LH8YvMJUaN2AL1JVc0",
    },
    {
        key : "system_root_expiry_date",
        label : "'root' password expiry date",
        description : "'root' password expiry date in the form of number of days since epoch",
        type : "uint32",
        hidden : true,
        userConfigurable : false,
        userMutable : true,
        advanced : true,
        tag : "Password",
        reconfigRequired : true,
        rebootRequired : false,
        controlNodeOnly : false,
        value : "",
    },
    {
        key : "system_root_authorizedkeys2",
        label : "SSH Key (root)",
        description : "Authorized public SSH keys for the local 'root' account.",
        type : "string",
        maxLen : 8192,
        userConfigurable : false,
        userMutable : true,
        advanced : true,
        tag : "Security",
        reconfigRequired : true,
        rebootRequired : false,
        controlNodeOnly : false,
        value : "",
        notifiers : ( "ssh_auth_key" ),
    },
    {
        key : "system_svcuser_encpassword",
        label : "Encrypted password for the 'svcuser' account",
        description : "Encrypted (SHA-512) password for the local 'svcuser' account.",
        type : "string",
        maxLen : 255,
        userConfigurable : false,
        userMutable : true,
        advanced : true,
        tag : "Security",
        reconfigRequired : true,
        rebootRequired : false,
        notifiers : ( "password" ),
        controlNodeOnly : false,
        value : "$6$eBIu9aQ6$wBnn9Tn.CUuuoi/JZe.oAOmUDIVCqHpXeem7ZHO5R7dPg2hul8tNCBzwumKrFw8A0qm.LH8YvMJUaN2AL1JVc0",
    },
    {
        key : "system_svcuser_expiry_date",
        label : "'svcuser' password expiry date",
        description : "'svcuser' password expiry date in the form of number of days since epoch",
        type : "uint32",
        hidden : true,
        userConfigurable : false,
        userMutable : true,
        advanced : true,
        tag : "Password",
        reconfigRequired : true,
        rebootRequired : false,
        controlNodeOnly : false,
        value : "",
    },
    {
        key : "system_svcuser_authorizedkeys2",
        label : "SSH Key (svcuser)",
        description : "Authorized public SSH keys for the local 'svcuser' account.",
        type : "string",
        maxLen : 8192,
        userConfigurable : false, 
        userMutable : true,
        advanced : true,
        tag : "Security",
        reconfigRequired : true,
        rebootRequired : false,
        controlNodeOnly : false,
        value : "",
        notifiers : ( "ssh_auth_key" ),
    },
    {
        key : "system_proxyuser_encpassword",
        label : "Encrypted password for the 'proxyuser' account",
        description : "Encrypted (SHA-512) password for the local 'proxyuser' account.",
        type : "encryptedstring",
        maxLen : 255,
        userConfigurable : false,
        userMutable : true,
        advanced : true,
        tag : "Security",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "",
    },
    { 
        key : "system_sysmonitor_encpassword", 
        label : "Encrypted password for the 'sysmonitor' account", 
        description : "Encrypted password for the local 'sysmonitor' account.", 
        type : "string",
        maxLen : 255, 
        userConfigurable : false, 
        userMutable : true,
        advanced : true, 
        tag : "Security", 
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "$6$eBIu9aQ6$wBnn9Tn.CUuuoi/JZe.oAOmUDIVCqHpXeem7ZHO5R7dPg2hul8tNCBzwumKrFw8A0qm.LH8YvMJUaN2AL1JVc0", 
    }, 
    {
        key : "ssh_config_version",
        label : "SSH Configuration Version",
        description : "The version of ssh properties",
        type : "string",
        maxLen : 8192,
        userConfigurable : false,
        userMutable : false,
        hidden : true,
        advanced : true,
        tag : "Security",
        reconfigRequired : true,
        rebootRequired : false,
        controlNodeOnly : false,
        value : "0",
        notifiers : ( "ssh" ),
    },
    {
        key : "ssh_host_ecdsa_key",
        label : "SSH HOST ECDSA Private Key",
        description : "Host ECDSA Keys for SSH",
        type : "text",
        maxLen : 8192,
        userConfigurable : false,
        userMutable : false,
        hidden : true,
        advanced : true,
        tag : "Security",
        reconfigRequired : true,
        rebootRequired : false,
        controlNodeOnly : false,
        value : "@{secrets/ssh_host_ecdsa_key}",
        notifiers : ( "ssh" ),
    },
    {
        key : "ssh_host_dsa_key",
        label : "SSH HOST DSA Private Key",
        description : "Host DSA Private Keys for SSH",
        type : "text",
        maxLen : 8192,
        userConfigurable : false, 
        userMutable : false,
        hidden : true,
        advanced : true,
        tag : "Security",
        reconfigRequired : true,
        rebootRequired : false,
        controlNodeOnly : false,
        value : "@{secrets/ssh_host_dsa_key}",
        notifiers : ( "ssh" ),
    },
    {
        key : "ssh_host_rsa_key",
        label : "SSH HOST RSA Private Key",
        description : "Host RSA Private Keys for SSH",
        type : "text",
        maxLen : 8192,
        userConfigurable : false, 
        userMutable : false,
        advanced : true,
        tag : "Security",
        reconfigRequired : true,
        rebootRequired : false,
        controlNodeOnly : false,
        value : "@{secrets/ssh_host_rsa_key}",
        notifiers : ( "ssh" ),
    },
    {
        key : "root_id_rsa",
        label : "Root SSH RSA Private Key",
        description : "Root RSA Private Keys for SSH",
        type : "text",
        maxLen : 8192,
        userConfigurable : false,
        userMutable : false,
        advanced : true,
        tag : "Security",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : false,
        value : "@{secrets/root_id_rsa}",
        notifiers : ( "ssh" ),
    },
    {
        key : "root_id_dsa",
        label : "Root SSH DSA Private Key",
        description : "Root DSA Private Keys for SSH",
        type : "text",
        maxLen : 8192,
        userConfigurable : false,
        userMutable : false,
        advanced : true,
        tag : "Security",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : false,
        value : "@{secrets/root_id_dsa}",
        notifiers : ( "ssh" ),
    },
    {
        key : "root_id_ecdsa",
        label : "Root SSH ECDSA Private Key",
        description : "Root ECDSA Private Keys for SSH",
        type : "text",
        maxLen : 8192,
        userConfigurable : false,
        userMutable : false,
        advanced : true,
        tag : "Security",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : false,
        value : "@{secrets/root_id_ecdsa}",
        notifiers : ( "ssh" ),
    },
    {
        key : "storageos_id_rsa",
        label : "storageos SSH RSA Private Key",
        description : "storageos RSA Private Keys for SSH",
        type : "text",
        maxLen : 8192,
        userConfigurable : false,
        userMutable : false,
        advanced : true,
        tag : "Security",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : false,
        value : "@{secrets/storageos_id_rsa}",
        notifiers : ( "ssh" ),
    },
    {
        key : "storageos_id_dsa",
        label : "storageos SSH DSA Private Key",
        description : "storageos DSA Private Keys for SSH",
        type : "text",
        maxLen : 8192,
        userConfigurable : false,
        userMutable : false,
        advanced : true,
        tag : "Security",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : false,
        value : "@{secrets/storageos_id_dsa}",
        notifiers : ( "ssh" ),
    },
    {
        key : "storageos_id_ecdsa",
        label : "storageos SSH ECDSA Private Key",
        description : "storageos ECDSA Private Keys for SSH",
        type : "text",
        maxLen : 8192,
        userConfigurable : false,
        userMutable : false,
        advanced : true,
        tag : "Security",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : false,
        value : "@{secrets/storageos_id_ecdsa}",
        notifiers : ( "ssh" ),
    },
    {
        key : "svcuser_id_rsa",
        label : "svcuser SSH RSA Private Key",
        description : "svcuser RSA Private Keys for SSH",
        type : "text",
        maxLen : 8192,
        userConfigurable : false,
        userMutable : false,
        advanced : true,
        tag : "Security",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : false,
        value : "@{secrets/svcuser_id_rsa}",
        notifiers : ( "ssh" ),
    },
    {
        key : "svcuser_id_dsa",
        label : "svcuser SSH DSA Private Key",
        description : "svcuser DSA Private Keys for SSH",
        type : "text",
        maxLen : 8192,
        userConfigurable : false,
        userMutable : false,
        advanced : true,
        tag : "Security",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : false,
        value : "@{secrets/svcuser_id_dsa}",
        notifiers : ( "ssh" ),
    },
    {
        key : "svcuser_id_ecdsa",
        label : "svcuser SSH ECDSA Private Key",
        description : "svcuser ECDSA Private Keys for SSH",
        type : "text",
        maxLen : 8192,
        userConfigurable : false,
        userMutable : false,
        advanced : true,
        tag : "Security",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : false,
        value : "@{secrets/svcuser_id_ecdsa}",
        notifiers : ( "ssh" ),
    },
    {
        key : "system_enable_firewall",
        label : "Enable Firewall",
        description : "Enable firewall on the cluster.",
        type : "string",
        allowedValues : ( "yes", "no" ),
        userConfigurable : false,
        userMutable : true,
        advanced : true,
        tag : "Security",
        reconfigRequired : true,
        rebootRequired : true,
        controlNodeOnly : false,
        value : "yes",
    },
    {
        key : "system_permit_root_ssh",
        label : "Permit root ssh access",
        description : "Permit the root account ssh access to the servers.",
        type : "string",
        allowedValues : ( "yes", "no" ),
        userConfigurable : false,
        userMutable : true,
        advanced : true,
        tag : "Security",
        reconfigRequired : true,
        rebootRequired : false,
        notifiers : ( "ssh" ),
        controlNodeOnly : false,
        value : "no",
    },
    {
        key : "system_permit_root_console",
        label : "Permit root console login",
        description : "Permit the root account to login to the console of the servers.",
        type : "string",
        allowedValues : ( "yes", "no" ),
        userConfigurable : false,
        userMutable : true,
        advanced : true,
        tag : "Security",
        reconfigRequired : true,
        rebootRequired : false,
        controlNodeOnly : false,
        value : "no",
    },
    {
        key : "controller_metering_interval",
        label : "Metering Interval",
        description : "Number of seconds between metering operations.",
        type : "uint32",
        userConfigurable : false, 
        userMutable : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : true,
        value : "3600", 
    },
    {
        key : "controller_discovery_interval",
        label : "Storage Systems",
        description : "Number of seconds between discovery operations of storage systems.",
        type : "uint32",
        userConfigurable : false, 
        userMutable : true,
        advanced : true,
        tag : "Discovery",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : true,
        value : "3600", 
    },
    {
        key : "controller_arrayaffinity_discovery_interval",
        label : "Array Affinity Discovery",
        description : "Number of seconds between array affinity discovery operations.",
        type : "uint32",
        userConfigurable : false,
        userMutable : true,
        advanced : true,
        tag : "Discovery",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : true,
        value : "3600",
    },
    {
        key : "controller_discovery_core_pool_size",
        label : "Discovery Threads",
        description : "Number of threads each node uses for discovery of storage system.",
        type : "uint16",
        allowedValues : ( "1", "2", "3" ),
        userConfigurable : true,
        userMutable : true,
        advanced : true,
        tag : "Discovery",
        reconfigRequired : true,
        rebootRequired : true,
        controlNodeOnly : true,
        value : "3",
    },
    {
        key : "controller_scan_interval",
        label : "Scan Interval",
        description : "Number of seconds between scan operations of Storage providers.",
        type : "uint32",
        userConfigurable : false, 
        userMutable : true,
        advanced : true,
        tag : "Discovery",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : true,
        value : "600", 
    },
    {
        key : "controller_ns_discovery_interval",
        label : "Network Systems",
        description : "Number of seconds between discovery operations of switches (fabric managers).",
        type : "uint32",
        userConfigurable : false, 
        userMutable : true,
        advanced : true,
        tag : "Discovery",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : true,
        value : "3600", 
    },
    {
        key : "controller_compute_discovery_interval",
        label : "Vblock Compute Systems",
        description : "Number of seconds between discovery operations of Vblock Compute Systems.",
        type : "uint32",
        userConfigurable : false,
        userMutable : true,
        advanced : true,
        tag : "Discovery",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : true,
        value : "3600",
    },
    {
        key : "controller_cs_discovery_interval",
        label : "Hosts and VMware vCenters",
        description : "Number of seconds between discovery operations of Hosts and VMware vCenters (host/vcenters).",
        type : "uint32",
        userConfigurable : false, 
        userMutable : true,
        advanced : true,
        tag : "Discovery",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : true,
        value : "86400", 
    },
    {
        key : "controller_metering_refresh_interval",
        label : "Metering Refresh Interval",
        description : "Number of seconds before a new metering operation is allowed since the last metering operation.",
        type : "uint32",
        userConfigurable : false, 
        userMutable : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : true,
        value : "720", 
    },
    {
        key : "controller_discovery_refresh_interval",
        label : "Storage Systems Refresh Interval",
        description : "Number of seconds before a new discovery operation is allowed since the last discovery operation.",
        type : "uint32",
        userConfigurable : false, 
        userMutable : true,
        advanced : true,
        tag : "Discovery",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : true,
        value : "600", 
    },
    {
        key : "controller_arrayaffinity_discovery_refresh_interval",
        label : "Array Affinity Refresh Interval",
        description : "Number of seconds before a new discovery operation is allowed since the last array affinity discovery operation.",
        type : "uint32",
        userConfigurable : false,
        userMutable : true,
        advanced : true,
        tag : "Discovery",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : true,
        value : "600",
    },
    {
        key : "controller_scan_refresh_interval",
        label : "Scan Refresh Interval",
        description : "Number of seconds before a new scan operation is allowed since the last scan of SMI-S provider operation.",
        type : "uint32",
        userConfigurable : false, 
        userMutable : true,
        advanced : true,
        tag : "Discovery",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : true,
        value : "60", 
    },
    {
        key : "controller_ns_discovery_refresh_interval",
        label : "Network Systems Refresh Interval",
        description : "Number of seconds before a new discovery of switches (fabric managers) is allowed since the last discovery operation.",
        type : "uint32",
        userConfigurable : false, 
        userMutable : true,
        advanced : true,
        tag : "Discovery",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : true,
        value : "60", 
    },
    {
        key : "controller_compute_discovery_refresh_interval",
        label : "Vblock Compute Systems Refresh Interval",
        description : "Number of seconds before a new discovery of Vblock Compute Systems is allowed since the last discovery operation.",
        type : "uint32",
        userConfigurable : false,
        userMutable : true,
        advanced : true,
        tag : "Discovery",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : true,
        value : "60",
    },
    {
        key : "controller_cs_discovery_refresh_interval",
        label : "Hosts and VMware vCenters Refresh Interval",
        description : "Number of seconds before a new discovery of Hosts and VMware vCenters (host/vcenters) is allowed since the last discovery operation.",
        type : "uint32",
        userConfigurable : false, 
        userMutable : true,
        advanced : true,
        tag : "Discovery",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : true,
        value : "60", 
    },
    {
        key : "controller_enable_auto_discovery_metering_scan_single_node_deployments",
        label : "Enable Auto Discovery Single Node",
        description : "Indicates whether automatic discovery/metering/scanning is overridden as disabled on single node deployments.",
        type : "string",
        allowedValues : ( "true", "false" ),
        userConfigurable : false,
        userMutable : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : true,
        value : "false",
    },
    {
        key : "controller_enable_metering",
        label : "Enable Metering",
        description : "Indicates whether metering is enabled.",
        type : "string",
        allowedValues : ( "true", "false" ),
        userConfigurable : false, 
        userMutable : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : true,
        value : "true", 
    },
    {
        key : "controller_enable_autodiscovery",
        label : "Enable Auto-Discovery",
        description : "Indicates whether auto-discovery is enabled.",
        type : "string",
        allowedValues : ( "true", "false" ),
        userConfigurable : false, 
        userMutable : true,
        advanced : true,
        tag : "Discovery",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : true,
        value : "true", 
    },
    {
        key : "controller_enable_arrayaffinity_discovery",
        label : "Enable Array Affinity Discovery",
        description : "Indicates whether array affinity discovery is enabled.",
        type : "string",
        allowedValues : ( "true", "false" ),
        userConfigurable : false,
        userMutable : true,
        advanced : true,
        tag : "Discovery",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : true,
        value : "false",
    },
    {
        key : "controller_enable_autoscan",
        label : "Enable Auto-Scan",
        description : "Indicates whether auto-scan of Storage providers is enabled.",
        type : "string",
        allowedValues : ( "true", "false" ),
        userConfigurable : false, 
        userMutable : true,
        advanced : true,
        tag : "Discovery",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : true,
        value : "true", 
    },
    {
        key : "controller_enable_monitoring",
        label : "Enable array monitoring",
        description : "Indicates whether array monitoring is enabled.",
        type : "string",
        allowedValues : ( "true", "false" ),
        userConfigurable : false, 
        userMutable : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : true,
        value : "true", 
    },
    {
        key : "controller_metering_collection_type",
        label : "Metering collection type",
        description : "Full collects all metering statistics while partial collects only storage port performance metrics.",
        type : "string",
        allowedValues : ( "Partial", "Full" ),
        userConfigurable : false,
        userMutable : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : true,
        value : "Partial",
    },
    {
        key : "controller_smis_provider_version",
        label : "SMI-S Provider version",
        description : "Minimum supported version for SMI-S Provider. Version format : MajorVersion.MinorVersion.RevisionNumber.BuildNumber.",
        type : "string",
        minLen : 7,
        userConfigurable : false, 
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "4.6.1.1",
    },
    {
        key : "controller_ibmxiv_provider_version",
        label : "IBM XIV SMI-S Provider version",
        description : "Minimum supported version for IBM XIV SMI-S Provider. Version format : MajorVersion.MinorVersion.RevisionNumber.BuildNumber.",
        type : "string",
        minLen : 7,
        userConfigurable : false,
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "10.2.4.0",
    },
    {
        key : "controller_hicommand_provider_version",
        label : "HiCommand Device Manager version",
        description : "Minimum supported version for HiCommand Device Manager. Version format : MajorVersion.MinorVersion.RevisionNumber.BuildNumber.",
        type : "string",
        minLen : 3,
        userConfigurable : false,
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "7.4",
    },
        {
            key : "controller_scaleio_firmware_version",
            label : "SMI-S Provider version",
            description : "Minimum supported version for ScaleIO. Version format : MajorVersion_MinorVersion.RevisionNumber.BuildNumber.",
            type : "string",
            minLen : 7,
            userConfigurable : false,
            userMutable : true,
            hidden : true,
            advanced : true,
            tag : "Controller",
            reconfigRequired : false,
            rebootRequired : false,
            controlNodeOnly : true,
            value : "1.32.0.0",
        },
        {
            key : "controller_xtremio_firmware_version",
            label : "XtremIO Array firmware version",
            description : "Minimum supported version for XtremIO. Version format : MajorVersion_MinorVersion.RevisionNumber.BuildNumber.",
            type : "string",
            minLen : 7,
            userConfigurable : false,
            userMutable : true,
            hidden : true,
            advanced : true,
            tag : "Controller",
            reconfigRequired : false,
            rebootRequired : false,
            controlNodeOnly : true,
            value : "2.4.0.20",
    },
        {
        key : "controller_brocade_firmware_version",
        label : "Brocade firmware version",
        description : "Minimum supported firmware version for Brocade CMCNE. Version Format : MajorVersion.MinorVersion.RevisionNumber.",
        type : "string",
        minLen : 3,
        userConfigurable : false,
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "11.2.1",
    },
    {
        key : "controller_mds_firmware_version",
        label : "MDS firmware version",
        description : "Minimum supported firmware version for Cisco MDS. Version Format : MajorVersion.MinorVersion(RevisionNumber).",
        type : "string",
        minLen : 3,
        userConfigurable : false,
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "5.0(1a)",
    },
    {
        key : "controller_vmax_firmware_version",
        label : "VMAX firmware version",
        description : "Minimum supported firmware version for VMAX Block. Version format : MajorVersion.MinorVersion",
        type : "string",
        minLen : 3,
        userConfigurable : false, 
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "5876.221", 
    },
    {
        key : "controller_vnxblock_firmware_version",
        label : "VNX Block firmware version",
        description : "Minimum supported firmware version for VNX Block. Version format : MajorVersion.MinorVersion",
        type : "string",
        minLen : 3,
        userConfigurable : false, 
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "05.32", 
    },
    {
        key : "controller_ucs_firmware_version",
        label : "UCS firmware version",
        description : "Minimum supported firmware version for Cisco UCSM. Version Format : MajorVersion.MinorVersion(RevisionNumber).",
        type : "string",
        minLen : 3,
        userConfigurable : false,
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "2.0",
    },
    {
        key : "controller_max_pool_utilization_percentage",
        label : "Pool Utilization",
        description : "Maximum percentage of storage pool utilization for provisioning operations.",
        type : "percent",
        userConfigurable : false, 
        userMutable : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "75", 
    },
    {
        key : "controller_max_thin_pool_subscription_percentage",
        label : "Thin Pool Subscription",
        description : "Maximum percentage of thin storage pool subscription for provisioning operations.",
        type : "uint32",
        userConfigurable : false, 
        userMutable : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "300", 
    },
    {
        key : "controller_vnxfile_firmware_version",
        label : "VNX File firmware version",
        description : "Minimum supported firmware version for VNX File. Version format : MajorVersion.MinorVersion.Revision",
        type : "string",
        minLen : 5,
        userConfigurable : false, 
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "7.1.71", 
    },
    {
        key : "controller_isilon_firmware_version",
        label : "Isilon firmware version",
        description : "Minimum supported firmware version for Isilon. Version format : MajorVersion.MinorVersion.Build.Revision",
        type : "string",
        minLen : 7,
        userConfigurable : false, 
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "7.0.2.0", 
    },
    {
        key : "controller_netapp_firmware_version",
        label : "NetApp firmware version",
        description : "Minimum supported firmware version for NetApp. Version format : MajorVersion.MinorVersion.Revision",
        type : "string",
        minLen : 5,
        userConfigurable : false,
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "8.1.1",
    },
    {
        key : "controller_netappc_firmware_version",
        label : "NetApp Cluster-Mode firmware version",
        description : "Minimum supported firmware version for NetApp Cluster-Mode. Version format : MajorVersion.MinorVersion.Revision",
        type : "string",
        minLen : 5,
        userConfigurable : false,
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "8.2.2",
    },
    {
        key : "controller_ddmc_firmware_version",
        label : "DataDomain DDMC firmware version",
        description : "Minimum supported firmware version for DataDomain DDMC. Version format : MajorVersion.MinorVersion.MaintenanceRev.Patch",
        type : "string",
        minLen : 7,
        userConfigurable : false,
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "1.2.1.0",
    },
    {
        key : "controller_datadomain_firmware_version",
        label : "DataDomain DDOS firmware version",
        description : "Minimum supported firmware version for DataDomain DDOS. Version format : MajorVersion.MinorVersion.MaintenanceRev.Patch",
        type : "string",
        minLen : 7,
        userConfigurable : false,
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "5.5.0.0",
    },
    {
        key : "controller_ibmxiv_firmware_version",
        label : "IBM XIV firmware version",
        description : "Minimum supported firmware version for IBM XIV. Version format : MajorVersion.MinorVersion.Revision",
        type : "string",
        minLen : 5,
        userConfigurable : false,
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "10.2.4",
    },
     {
        key : "controller_vmax_max_allowed_HLU",
        label : "VMAX maximum allowed HLU",
        description : "Maximum allowed HLU number for VMAX export",
        type : "string",
        minLen : 3,
        userConfigurable : false,
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "4096",
    },
    {
        key : "controller_vnxblock_max_allowed_HLU",
        label : "VNX Block maximum allowed HLU",
        description : "Maximum allowed HLU number for VNX Block export",
        type : "string",
        minLen : 3,
        userConfigurable : false,
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "4096",
    },
    {
        key : "controller_xtremio_max_allowed_HLU",
        label : "XtremIO maximum allowed HLU",
        description : "Maximum allowed HLU number for XtremIO export",
        type : "string",
        minLen : 3,
        userConfigurable : false,
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "2048",
    },
    {
        key : "controller_unity_max_allowed_HLU",
        label : "Unity maximum allowed HLU",
        description : "Maximum allowed HLU number for Unity export",
        type : "string",
        minLen : 3,
        userConfigurable : false,
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "4096",
    },
    {
        key : "controller_vplex_max_allowed_HLU",
        label : "VPLEX maximum allowed HLU",
        description : "Maximum allowed HLU number for VPLEX export",
        type : "string",
        minLen : 3,
        userConfigurable : false,
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "4096",
    },
    {
        key : "vasa_base_url",
        label : "VASA Base URL",
        description : "ViPR instance URL that the VASA storage provider can utilize. By default the VASA provider utilizes this URL: 'https://localhost:4443'.",
        type : "url",
        userConfigurable : false, 
        userMutable : true,
        advanced : true,
        tag : "Other",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : true,
        value : "https://localhost:4443", 
    },
    {
        key : "system_login_banner",
        label : "Login banner",
        description : "The login banner that will be displayed during login process.",
        type : "text",
        maxLen : 8192,
        userConfigurable : false, 
        userMutable : true,
        advanced : true,
        tag : "Security",
        reconfigRequired : true,
        rebootRequired : true,
        controlNodeOnly : false,
        siteSpecific: true,
        value : "You are accessing ViPR. By using this system you consent to the owning organization's terms and conditions.", 
    },
    {
        key : "config_version",
        label : "Configuration version number",
        description : "Internal configuration version number.",
        type : uint64,
        userConfigurable : false, 
        userMutable : false, 
        controlNodeOnly : false,
        hidden : true,
        value : "0",
    },
    {
        key : "certificate_version",
        label : "certificate version number",
        description : "Internal certificate version number.",
        type : uint64,
        userConfigurable : false, 
        userMutable : true, 
        controlNodeOnly : false,
        rebootRequired : true,
        hidden : true,
        value : "0",
        siteSpecific : true,
    },
    {
        key : "controller_vplex_firmware_version",
        label : "VPLEX firmware version",
        description : "Minimum supported firmware version for VPLEX. Version format : MajorVersion.MinorVersion",
        type : "string",
        minLen : 3,
        userConfigurable : false, 
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "5.2", 
    },
    {
        key : "controller_vplex_director_min_port_count",
        label : "VPLEX director minimum port count",
        description : "The minimum number of VPLEX director ports required when validating backend export masking. The VPLEX best practices recommendation is 2 ports (the default) or greater. Select a value between 1 and 4.",
        type : "uint8",
        allowedValues : ("1", "2", "3", "4"),
        userConfigurable : true,
        userMutable : true,
        hidden : false,
        advanced : false,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "2",
    },
    {
        key : "controller_vplex_volume_discovery_mode",
        label : "VPLEX backend volume discovery mode",
        description : "'Only During Discovery' mode will collect all VPLEX backend volume data during Unmanaged Volume discovery (this mode is the default and is recommended for ingesting large numbers of volumes at once, and full ingestion will fail on an individual volume if any data is missing from the database). 'Only During Ingestion' mode will delay discovery of backend volumes until ingestion time (this mode is recommended for ingesting a few specific volumes at once so that discovery will run faster).  'During Discovery and Ingestion' will attempt to collect as much data as possible during discovery, and will check again during ingestion if any needed backend volume data is missing from the database (this mode is the most flexible, but may exhibit somewhat unpredictable performance). 'Only Use Database' is a flag that can be used to indicate that no direct queries of the VPLEX should be attempted, and that the code should rely only on what is in the database already.",
        type : "string",
        allowedValues : ( "Only During Discovery", "Only During Ingestion", "During Discovery and Ingestion", "Only Use Database" ),
        userConfigurable : false,
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "Only During Discovery",
    },
    {
        key : "controller_vplex_volume_discovery_filter",
        label : "VPLEX volume discovery filter",
        description : "Regex filter to place on the virtual volume name.  Only those matching will be discovered. E.g.: '(.*VAPM00140844981-017.*|.*V000198700406.*)'.",
        type : "string",
        maxLen : 63,
        userConfigurable : false,
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
    },
    {
        key : "controller_vplex_volume_discovery_kill_switch",
        label : "VPLEX volume discovery kill switch",
        description : "Set to 'stop' to cancel current VPLEX volume discovery operation.  Be sure to set back to 'run' in order for volume discovery to start next time.",
        type : "string",
        allowedValues : ( "run", "stop" ),
        userConfigurable : false,
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        value : "run",
    },
    {
        key : "controller_vplex_volume_expansion_status_check_retry_count",
        label : "VPLEX volume expansion status check retry count",
        description : "Retry count to check VPLEX volume expansion status",
        type : "uint32",
        userConfigurable : false,
        userMutable : true,
        hidden : false,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "240",
    },
    {
        key : "controller_vplex_volume_expansion_status_check_retry_max_wait",
        label : "VPLEX volume expansion status check retry max wait",
        description : "Time in milliseconds to wait before next check of VPLEX volume expansion status",
        type : "uint64",
        userConfigurable : false,
        userMutable : true,
        hidden : false,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "60000",
    },
    {
        key : "controller_vplex_allow_local_to_metro_auto_upgrade",
        label : "Allow VPLEX local to metro hardware change",
        description : "If true, enables automatically updating the VPLEX Storage System and related Storage Ports if a local to metro configuration upgrade has been detected.  If false, an exception will be thrown if this situation is detected.",
        type : "boolean",
        userConfigurable : true, 
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : false,
        value : "false", 
    },  
	{
        key : "controller_vplex_backend_hds_discovery_retry",
        label : "Retry Hitachi array discovery in VPLEX to find exported storage volume.",
        description : "Set it to true, if VPLEX+HDS volume creation in ViPR frequenly fails with Error: Could not find storage volume with name XXXX on array YYYY",
        type : "boolean",
        userConfigurable : true, 
        userMutable : true,
        hidden : false,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : false,
        value : "false", 
    },  
    {
        key : "compute_windows_version",
        label : "Windows Version",
        description : "Minimum supported version for Windows. Version format : MajorVersion.MinorVersion.BuildNumber",
        type : "string",
        minLen : 3,
        userConfigurable : false, 
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "Compute",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "6.0.6002", 
    },
    {
        key : "compute_hpux_version",
        label : "HPUX Version",
        description : "Minimum supported version for HPUX. Version format : MajorVersion.MinorVersion.BuildNumber",
        type : "string",
        minLen : 3,
        userConfigurable : false,
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "Compute",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "11.31",
    },
    {
        key : "compute_aix_version",
        label : "AIX Version",
        description : "Minimum supported version for AIX. Version format : MajorVersion.MinorVersion.BuildNumber",
        type : "string",
        minLen : 3,
        userConfigurable : false,
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "Compute",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "6.1.0",
    },
    {
        key : "compute_aixvio_version",
        label : "AIX VIO Version",
        description : "Minimum supported version for AIX VIO. Version format: MajorVersion.MinorVersion.BuildNumber",
        type : "string",
        minLen : 1,
        userConfigurable : false,
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "Compute",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "2.0.0",
    },
    {
        key : "compute_vmware_vcenter_version",
        label : "VMware vCenter Version",
        description : "Minimum supported version for VMware vCenter. Version format : MajorVersion[.MinorVersion[.MinorVersion...]] ",
        type : "string",
        minLen : 1,
        userConfigurable : false, 
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "Compute",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "5.0", 
    },
    {
        key : "compute_suse_linux_version",
        label : "SuSE Enterprise Linux Version",
        description : "Minimum supported version for SuSE Enterprise Linux. Version format : MajorVersion[.MinorVersion[.MinorVersion...]]",
        type : "string",
        minLen : 1,
        userConfigurable : false, 
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "Compute",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "11", 
    },
    {
        key : "compute_redhat_linux_version",
        label : "Redhat Linux Version",
        description : "Minimum supported version for Redhat Linux. Version format: MajorVersion[.MinorVersion[.MinorVersion...]]",
        type : "string",
        minLen : 1,
        userConfigurable : false, 
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "Compute",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "5.9", 
    },
    {
        key : "controller_rp_firmware_version",
        label : "RecoverPoint firmware version",
        description : "Minimum supported firmware version for RecoverPoint. Version format : MajorVersion.MinorVersion.ServicePack",
        type : "string",
        minLen : 3,
        userConfigurable : false, 
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "4.0", 
    },   
    {
        key : "controller_ns_zone_refresh_always",
        label : "Network system zone refresh behavior",
        description : "Co-exist mask zone refresh behavior. Always means the zones will be refreshed each time the mask is refreshed. Otherwise, the zones are refreshed only when initiator or ports are changed.",
        type : "boolean",
        userConfigurable : false, 
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "false", 
    },   
    {
        key : "controller_ns_brocade_discovery_by_fabric_association",
        label : "Network system Brocade endpoints discovery by fabric",
        description : "Brocade endpoints discovery from SMIS agent. True means the endpoints will be discovered per fabric which can be slow. Otherwise, the system will get all endpoints and all the associations to the fabrics and assign each endpoint to its fabric. This way of finding endpoints uses more memory and may not be suitable for large environments.",
        type : "boolean",
        userConfigurable : false, 
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "true", 
    },   
    {
        key : "controller_mds_communication_timeout",
        label : "Cisco MDS Command Timeout",
        description : "Timeout value for Cisco MDS command in seconds",
        type : "uint32",
        userConfigurable : true,
        userMutable : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : false,
        value : "300",
    },
    {
        key : "controller_mds_clone_zoneset",
        label : "Clone Cisco Zonesets",
        description : "Clone Cisco zoneset before committing zoning changes. Creating zoneset clones will increase the size of the zoneDB. Manual removal of zoneset clones might be required if the zoneDB size grows close to the allowed limits for zoneDB.",
        type : "string",
        allowedValues : ( "true", "false" ),
        userConfigurable : true,
        userMutable : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : false,
        value : "false",
    },
    {
        key : "controller_mds_allow_zoneset_commit",
        label : "Allow Cisco Zone changes",
        description : "Allow Cisco zoning changes to be committed if zoneset clone fails. If Clone Cisco Zonesets is false, this option is ignored.",
        type : "string",
        allowedValues : ( "true", "false" ),
        userConfigurable : true,
        userMutable : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : false,
        value : "false",
    },
    {
        key : "controller_rp_consistency_group_lock_timeout",
        label : "Timeout in sec.",
        description : "Timeout for RP Consistency Group Locking",
        type : "uint32",
        userConfigurable : true,
        userMutable : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : false,
        value : "7200",
        hidden : "true"
    },
    {
        key : "controller_rp_vplex_consistency_group_lock_timeout",
        label : "Timeout in sec.",
        description : "Timeout for RP/VPLEX Consistency Group Locking",
        type : "uint32",
        userConfigurable : true,
        userMutable : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : false,
        value : "7200",
        hidden : "true"
    },
    {
        key : "controller_array_consistency_group_lock_timeout",
        label : "Timeout in sec.",
        description : "Timeout for Array Consistency Group Locking",
        type : "uint32",
        userConfigurable : true,
        userMutable : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : false,
        value : "7200",
        hidden : "true"
    },
    {
        key : "controller_vplex_backend_export_lock_timeout",
        label : "Timeout in sec.",
        description : "Timeout for VPLEX Backend Export Locking",
        type : "uint32",
        userConfigurable : true,
        userMutable : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : false,
        value : "28800",
        hidden : "true"
    },
    {
        key : "controller_export_group_ops_lock_timeout",
        label : "Timeout in sec.",
        description : "Timeout for Export Group Operation Locking",
        type : "uint32",
        userConfigurable : true,
        userMutable : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : false,
        value : "7200",
        hidden : "true"
    },
    {
        key : "controller_rp_export_lock_timeout",
        label : "Timeout in sec.",
        description : "Timeout for RP Export Operation Locking",
        type : "uint32",
        userConfigurable : true,
        userMutable : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : false,
        value : "7200",
        hidden : "true"
    },
    {
        key : "controller_vplex_api_lib_lock_timeout",
        label : "Timeout in sec.",
        description : "Timeout for VPLEX API Library Locking",
        type : "uint32",
        userConfigurable : true,
        userMutable : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : false,
        value : "1200",
        hidden : "true"
    },
    {
        key : "controller_srdf_provisioning_lock_timeout",
        label : "Timeout in sec",
        description : "Timeout for SRDF Provisioning Locking",
        type : "uint32",
        userConfigurable : true,
        userMutable : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : false,
        value : "300",
        hidden : "true"
    },
    {
        key : "controller_ingest_zones_with_non_vipr_name",
        label : "Ingest zones with non-VIPR name",
        description : "Ingest zones not matching VIPR naming, zones may have been manually created",
        type : "boolean",
        userConfigurable : true,
        userMutable : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : false,
        value : "false",
        hidden : "true"
    },
    {
        key : "event_clean_interval",
        label : "Event Cleaning Interval",
        description : "Time interval in minutes between event cleaning operations. (Minimum 60 minutes)",
        type : "uint32",
        userConfigurable : true,
        userMutable : true,
        advanced : true,
        tag : "Other",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : true,
        value : "60",
    },
    {
        key : "event_ttl",
        label : "Event Time To Live",
        description : "Length of time in minutes that events should be kept. (Minimum 60 minutes)",
        type : "uint32",
        userConfigurable : true,
        userMutable : true,
        advanced : true,
        tag : "Other",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "43200"
    },
    {
        key : "task_clean_interval",
        label : "Task Cleaning Interval",
        description : "Time interval in minutes between task cleaning operations. (Minimum 60 minutes)",
        type : "uint32",
        userConfigurable : true,
        userMutable : true,
        advanced : true,
        tag : "Other",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : true,
        value : "60",
    },
    {
        key : "task_ttl",
        label : "Task Time To Live",
        description : "Length of time in minutes that tasks should be kept once they have completed. (Minimum 60 minutes)",
        type : "uint32",
        userConfigurable : true,
        userMutable : true,
        advanced : true,
        tag : "Other",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "10080"
    },
    {
        key : "internal_api_key_algo",
        label : "HMAC algorithm for internal api calls",
        description : "HMAC algorithm for internal api calls",
        type : "string",
        allowedValues : ( "sha-1", "sha-256" ),
        userConfigurable : true,
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : false,
        value : "sha-1",
    },
    {
        key : "vcenter_drs_enabled",
        label : "vCenter Cluster DRS Enablement",
        description : "vCenter Cluster DRS Enablement",
        type : "string",
        allowedValues : ( "true", "false" ),
        userConfigurable : false,
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "vCenter Cluster",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : false,
        value : "true",
    },
    {
        key : "vcenter_drs_automationLevel",
        label : "vCenter Cluster DRS Automation Level",
        description : "vCenter Cluster DRS Automation Level",
        type : "string",
        allowedValues : ( "fullyAutomated", "partiallyAutomated", "manual" ),
        userConfigurable : false,
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "vCenter Cluster",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : false,
        value : "fullyAutomated",
    },
    {
        key : "vcenter_drs_migrationThreshold",
        label : "vCenter Cluster DRS Migration Threshold",
        description : "vCenter Cluster DRS Migration Threshold, 1 is conservative, 5 is aggressive",
        type : "string",
        allowedValues : ( "1", "2", "3", "4", "5" ),
        userConfigurable : false,
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "vCenter Cluster",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : false,
        value : "3",
    },
    {
        key : "vcenter_drs_dpm_enabled",
        label : "vCenter Cluster DRS Power Management Enablement",
        description : "vCenter Cluster DRS Power Management Enablement",
        type : "string",
        allowedValues : ( "true", "false" ),
        userConfigurable : false,
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "vCenter Cluster",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : false,
        value : "true",
    },
    {
        key : "vcenter_drs_dpm_powerManagement",
        label : "vCenter Cluster DRS Power Management",
        description : "vCenter Cluster DRS Power Management",
        type : "string",
        allowedValues : ( "automated", "manual" ),
        userConfigurable : false,
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "vCenter Cluster",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : false,
        value : "automated",
    },
    {
        key : "vcenter_drs_dpm_dpmThreshold",
        label : "vCenter Cluster DRS Power Management Threshold",
        description : "vCenter Cluster DRS Power Management Threshold",
        type : "string",
        allowedValues : ( "1", "2", "3", "4", "5" ),
        userConfigurable : false,
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "vCenter Cluster",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : false,
        value : "3",
    },
    {
        key : "vcenter_das_enabled",
        label : "vCenter Cluster HA Enablement",
        description : "vCenter Cluster HA Enablement",
        type : "string",
        allowedValues : ( "true", "false" ),
        userConfigurable : false,
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "vCenter Cluster",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : false,
        value : "true",
    },
    {
        key : "vcenter_das_hostMonitoring_enabled",
        label : "vCenter Cluster HA Host Monitoring Enablement",
        description : "vCenter Cluster HA Host Monitoring Enablement",
        type : "string",
        allowedValues : ( "true", "false" ),
        userConfigurable : false,
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "vCenter Cluster",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : false,
        value : "true",
    },
    {
        key : "vcenter_das_admissionControl_enabled",
        label : "vCenter Cluster HA Admission Control Enablement",
        description : "vCenter Cluster HA Admission Control Enablement",
        type : "string",
        allowedValues : ( "true", "false" ),
        userConfigurable : false,
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "vCenter Cluster",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : false,
        value : "true",
    },
    {
        key : "vcenter_das_admissionControlPolicy_policy",
        label : "vCenter Cluster HA Admission Control Policy",
        description : "vCenter Cluster HA Admission Control Policy",
        type : "string",
        allowedValues : ( "resourcePercentage", "hostFailureLevel" ),
        userConfigurable : false,
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "vCenter Cluster",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : false,
        value : "resourcePercentage",
    },
    {
        key : "vcenter_das_admissionControlPolicy_resourcePercentage_cpuPercentage",
        label : "vCenter Cluster HA Admission Control Policy Resource Percentage CPU",
        description : "vCenter Cluster HA Admission Control Policy Resource Percentage CPU",
        type : "string",
        allowedValues : ( "0", "25", "50", "75", "100"),
        userConfigurable : false,
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "vCenter Cluster",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : false,
        value : "25",
    },
    {
        key : "vcenter_das_admissionControlPolicy_resourcePercentage_memoryPercentage",
        label : "vCenter Cluster HA Admission Control Policy Resource Percentage Memory",
        description : "vCenter Cluster HA Admission Control Policy Resource Percentage Memory",
        type : "string",
        allowedValues : ( "0", "25", "50", "75", "100"),
        userConfigurable : false,
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "vCenter Cluster",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : false,
        value : "75",
    },    
    {
        key : "vcenter_das_admissionControlPolicy_hostFailureLevel_failoverLevel",
        label : "vCenter Cluster HA Admission Control Policy Host Failure Level",
        description : "vCenter Cluster HA Admission Control Policy Resource Policy Host Failure Level",
        type : "string",
        allowedValues : ( "1", "2", "3", "4"),
        userConfigurable : false,
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "vCenter Cluster",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : false,
        value : "3",
    },
    {
        key : "vcenter_das_vmSettings_restartPriority",
        label : "vCenter Cluster HA VM Restart Priority",
        description : "vCenter Cluster HA VM Restart Priority",
        type : "string",
        allowedValues : ( "disabled", "low", "medium", "high" ),
        userConfigurable : false,
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "vCenter Cluster",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : false,
        value : "high",
    },
    {
        key : "vcenter_das_vmSettings_isolationResponse",
        label : "vCenter Cluster HA Host Isolation Response",
        description : "vCenter Cluster HA Host Isolation Response",
        type : "string",
        allowedValues : ( "none", "shutdown", "powerOff" ),
        userConfigurable : false,
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "vCenter Cluster",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : false,
        value : "powerOff",
    },
    {
        key : "vcenter_das_vmSettings_vmMonitoring_monitoring",
        label : "vCenter Cluster HA VM Monitoring",
        description : "vCenter Cluster HA VM Monitoring",
        type : "string",
        allowedValues : ( "vmMonitoringDisabled", "vmMonitoringOnly", "vmAndAppMonitoring"),
        userConfigurable : false,
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "vCenter Cluster",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : false,
        value : "vmAndAppMonitoring",
    },
    {
        key : "vcenter_das_vmSettings_vmMonitoring_sensitivity",
        label : "vCenter Cluster HA VM Monitoring Sensitivity",
        description : "vCenter Cluster HA VM Monitoring Sensitivity",
        type : "string",
        allowedValues : ( "low", "medium", "high" ),
        userConfigurable : false,
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "vCenter Cluster",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : false,
        value : "medium",
    },    
    {
        key : "vcenter_swapfile_policy",
        label : "vCenter Cluster Swapfile Policy",
        description : "vCenter Cluster Swapfile Policy",
        type : "string",
        allowedValues : ( "hostLocal", "vmDirectory" ),
        userConfigurable : false,
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "vCenter Cluster",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : false,
        value : "vmDirectory",
    } ,
    {
        key : "vcenter_host_operation_timeout",
        label : "vCenter Host Operation Timeout",
        description : "Time in seconds to wait for making request to add host to vCenter cluster",
        type : "string",
        allowedValues : ( "60", "150", "300", "450", "600", "750", "900", "1800" ),
        userConfigurable : false,
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "vCenter Cluster",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : false,
        value : "450",
    } ,
    {
        key : "vcenter_operation_timeout",
        label : "vCenter Operation Timeout",
        description : "Time in seconds to wait for various operations made to entities in vCenter",
        type : "string",
        allowedValues : ( "60", "150", "300", "450", "600", "750", "900", "1800" ),
        userConfigurable : false,
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "vCenter Cluster",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : false,
        value : "150",
    },
    {
        key : "backup_external_server_type",
        label : "External Server Type",
        description : "The type of external server to store backup files",
        type : "string",
        maxLen : 10,
        tag : "Backup",
        allowedValues : ( "FTP", "CIFS" ),
        userMutable : true,
        userConfigurable : true,
        reconfigRequired : false,
        rebootRequired : false,
        value : "FTP",
        controlNodeOnly : true,
    },
    {
        key : "backup_external_location_url",
        label : "External Server URL",
        description : "The URL of file server to store backup files.ftp://* or ftps://* for FTP,smb://* for CIFS.",
        type : "string",
        tag : "Backup",
        userMutable : true,
        userConfigurable : true,
        reconfigRequired : false,
        rebootRequired : false,
        value : "",
        controlNodeOnly : true,
        notifiers : ( "backupscheduler" ),
    },
    {
        key : "backup_external_location_domain",
        label : "Domain",
        description : "Domain to login to backup CIFS file server",
        type : "string",
        maxLen : 25,
        tag : "Backup",
        userMutable : true,
        userConfigurable : true,
        reconfigRequired : false,
        rebootRequired : false,
        value : "",
        controlNodeOnly : true,
    },
    {
        key : "backup_external_location_username",
        label : "User Name",
        description : "Username to login to backup file server",
        type : "string",
        maxLen : 25,
        tag : "Backup",
        userMutable : true,
        userConfigurable : true,
        reconfigRequired : false,
        rebootRequired : false,
        value : "",
        controlNodeOnly : true,
    },
    {
        key : "backup_external_location_password",
        label : "Password",
        description : "Password to login to backup file server.",
        type : "encryptedstring",
        maxLen : 25,
        tag : "Backup",
        userMutable : true,
        userConfigurable : true,
        reconfigRequired : false,
        rebootRequired : false,
        value : "",
        controlNodeOnly : true,
    },
    {
        key : "backup_scheduler_enable",
        label : "Enable Scheduler",
        description : "Turn backup scheduler on or off",
        type : "boolean",
        tag : "Backup",
        userMutable : true,
        userConfigurable : true,
        reconfigRequired : false,
        rebootRequired : false,
        value : "true",
        controlNodeOnly : true,
        notifiers : ( "backupscheduler" ),
    },
    {
        key : "backup_scheduler_time",
        label : "Backup Time",
        description : "The time scheduled backup starts, based on local time zone(hour:minute)",
        type : "uint32",
        tag : "Backup",
        advanced : true,
        userMutable : true,
        userConfigurable : true,
        reconfigRequired : false,
        rebootRequired : false,
        value : "100",
        controlNodeOnly : true,
        notifiers : ( "backupscheduler" ),
    },
    {
        key : "backup_scheduler_interval",
        label : "Number of Backups per Day",
        description : "The frequency scheduled backup starts per day",
        type : "string",
        maxLen : 15,
        tag : "Backup",
        advanced : true,
        userMutable : true,
        userConfigurable : false,
        reconfigRequired : false,
        rebootRequired : false,
        value : "1day",
        controlNodeOnly : true,
        notifiers : ( "backupscheduler" ),
    },
    {
        key : "backup_scheduler_copies_to_keep",
        label : "Backup Max Copies",
        description : "The maximum number of scheduled backup copies to save on the ViPR nodes. Once this is reached, older scheduled backup copies are deleted from the nodes so that newer ones can be saved",
        type : "uint32",
        allowedValues : ( "0", "1", "2", "3", "4", "5" ),
        tag : "Backup",
        advanced : true,
        userMutable : true,
        userConfigurable : true,
        reconfigRequired : false,
        rebootRequired : false,
        value : "5",
        controlNodeOnly : true,
    },
    {
        key : "backup_max_used_disk_percentage",
        label : "Backup quota",
        description : "Backup files used disk percentage upper limit",
        type : "uint32",
        tag : "Backup",
        advanced : true,
        userMutable : true,
        userConfigurable : true,
        reconfigRequired : false,
        rebootRequired : false,
        value : "30",
        controlNodeOnly : true,
    },
    {
        key : "backup_threshold_disk_percentage",
        label : "Backup threshold",
        description : "Disable backup when disk used percentage up to this limit",
        type : "uint32",
        tag : "Backup",
        advanced : true,
        userMutable : true,
        userConfigurable : true,
        reconfigRequired : false,
        rebootRequired : false,
        value : "80",
        controlNodeOnly : true,
    },
    {
        key : "backup_max_manual_copies",
        label : "Backup Max Copies",
        description : "The maximum number of manually created backup copies to save on the ViPR nodes. Once this is reached, no copies can be created until you manually delete the older manually created copies from the nodes",
        type : "uint32",
        allowedValues : ( "0", "1", "2", "3", "4", "5" ),
        tag : "Backup",
        advanced : true,
        userMutable : true,
        userConfigurable : true,
        reconfigRequired : false,
        rebootRequired : false,
        value : "5",
        controlNodeOnly : true,
    },
    {
        key : "ldap_connection_timeout",
        label : "Ldap Connection Timeout",
        description : "Amount of time (in seconds) that vipr reports timeout when connecting ldap/AD server (0 means vipr will wait forever)",
        type : "uint32",
        allowedValues : ( "0", "5", "10", "20", "30", "60", "120", "300"),
        tag : "Controller",
        advanced : false,
        userMutable : true,
        hidden : false,
        userConfigurable : true,
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "10",
    },
    {
        key : "password_change_interval",
        label : "Change Interval",
        description : "Amount of time (in minutes) that a local user password must be in use before it can be changed.(valid value range is [0-1440], 0 allows changes immediately.)",
        type : "uint16",
        userConfigurable : true,
        userMutable : true,
        hidden : false,
        advanced : false,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "60",
    },
    {
        key : "password_min_length",
        label : "Minimum Length",
        description : "Minimum number of characters that a local user password must contain. (0 means no minimum number is required.)",
        type : "uint8",
        allowedValues : ( "0", "6", "7", "8", "9", "10", "11", "12", "13", "14"),
        userConfigurable : true,
        userMutable : true,
        hidden : false,
        advanced : false,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "8",
    },
    {
        key : "password_lowercase_alphabet",
        label : "Lowercase Character Number",
        description : "Minimum number of lowercase alphabetic characters that a local user password must contain.",
        type : "uint8",
        allowedValues : ("1", "2", "3", "4", "5"),
        userConfigurable : true,
        userMutable : true,
        hidden : false,
        advanced : false,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "1",
    },
    {
        key : "password_uppercase_alphabet",
        label : "Uppercase Character Number",
        description : "Minimum number of uppercase alphabetic characters that a local user password must contain.",
        type : "uint8",
        allowedValues : ("1", "2", "3", "4", "5"),
        userConfigurable : true,
        userMutable : true,
        hidden : false,
        advanced : false,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "1",
    },
    {
        key : "password_numeric_character",
        label : "Numeric Character Number",
        description : "Minimum number of numeric characters that a local user password must contain.",
        type : "uint8",
        allowedValues : ("1", "2", "3", "4", "5"),
        userConfigurable : true,
        userMutable : true,
        hidden : false,
        advanced : false,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "1",
    },
    {
        key : "password_special_character",
        label : "Special Character Number",
        description : "Minimum number of special characters that a local user password must contain.",
        type : "uint8",
        allowedValues : ("1", "2", "3", "4", "5"),
        userConfigurable : true,
        userMutable : true,
        hidden : false,
        advanced : false,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "1",
    },
    {
        key : "password_repeating_character",
        label : "Repeating Character Number",
        description : "Maximum number of consecutive repeating characters that a local user password can contain. (0 means disable repeating characters check)",
        type : "uint8",
        allowedValues : ( "0","1","2", "3", "4", "5"),
        userConfigurable : true,
        userMutable : true,
        hidden : false,
        advanced : false,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "3",
    },
    {
        key : "password_changed_character",
        label : "Characters Need Be Changed",
        description : "Minimum number of characters that must be changed in local user password.",
        type : "uint8",
        allowedValues : ( "1", "2", "3", "4" ),
        userConfigurable : true,
        userMutable : true,
        hidden : false,
        advanced : false,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "2",
    },
    {
        key : "password_history_rule",
        label : "History Rule",
        description : "Number of unique passwords required before an old local user password can be reused.(0 means a password can be reused immediately.)",
        type : "uint8",
        allowedValues : ("0", "3", "4", "5", "10"),
        userConfigurable : true,
        userMutable : true,
        hidden : false,
        advanced : false,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "3",
    },
    {
        key : "password_expire_days",
        label : "Expire Time",
        description : "Number of days that a local user password can be in use before ViPR requires a password change.(valid value range is [14-365], 0 means the password will never expire.). WARNING:  Be sure to configure root and svcuser email before enabling Expire Time.",
        type : "uint16",
        userConfigurable : true,
        userMutable : true,
        hidden : false,
        advanced : false,
        tag : "Controller",
        reconfigRequired : true,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "0",
    },
    {
        key : "max_auth_login_attempts",
        label : "Login attempts",
        description : "the max number of consecutive login failed attempts before locking out the client IP (valid value range is [0-20], 0 means no lockout)",
        type : "uint8",
        userConfigurable : true,
        userMutable : true,
        hidden : false,
        advanced : false,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "10",
    },
    {
        key : "auth_lockout_time_in_minutes",
        label : "lockout time in minutes",
        description : "time to wait for a blocked client IP to be unblocked (valid value range is [0-1440], 0 means no lockout)",
        type : "uint16",
        userConfigurable : true,
        userMutable : true,
        hidden : false,
        advanced : false,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "10",
    },
    {
        key : "token_life_time_in_minutes",
        label : "Token Life Time",
        description : "the life time of a token in minutes (valid value range is [5-1440])",
        type : "uint16",
        userConfigurable : true,
        userMutable : true,
        hidden : false,
        advanced : false,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "480",
    },{
        key : "token_idle_time_in_minutes",
        label : "Token Idle Time",
        description : "the idle time of a token in minutes (valid value range is [5-1440])",
        type : "uint16",
        userConfigurable : true,
        userMutable : true,
        hidden : false,
        advanced : false,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "120",
    },
    {
        key : "controller_vplex_max_async_polls",
        label : "VPLEX max async. polls",
        description : "Maximum polls for a VPLEX asynchronous response",
        type : "uint32",
        userConfigurable : true,
        userMutable : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : false,
        value : "240",
    },
    {
        key : "controller_vplex_migration_max_async_polls",
        label : "VPLEX max migration async. polls",
        description : "Maximum polls for a VPLEX migration asynchronous response",
        type : "uint32",
        userConfigurable : true,
        userMutable : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : false,
        value : "240",
    },
    {
        key : "compute_vmware_esx_version",
        label : "VMware ESX Version",
        description : "Minimum supported version for VMware ESX. Version format : MajorVersion[.MinorVersion[.MinorVersion...]] ",
        type : "string",
        minLen : 1,
        userConfigurable : false,
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "Compute",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "5.0",
    },
    {
     key : "use_short_node_name",
     label : "Enable Short Node Name",
     description : "Short node names can be used for API query parameters and SSH between nodes. A Node short name is everything before the first '.' in the node name and must be unique.",
     type : "string",
     allowedValues : ( "true", "false" ),
     tag : "Custom Node Names",
     userMutable : true,
     userConfigurable : true,
     reconfigRequired : true,
     rebootRequired : true,
     value : "false",
     controlNodeOnly : true,
     siteSpecific : true,
    },
    {
        key : "cim_connection_max_inactive_time",
        label : "CIM Connection TTL",
        description : "Maximum number of seconds before an inactive SMI-S is reaped. Should be less than the Discovery Scan interval. If set to 0, reaping is disabled.",
        type : "uint32",
        userConfigurable : false,
        userMutable : true,
        advanced : true,
        tag : "Discovery",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : true,
        value : "480",
    },
    {
        key : "workflow_suspend_on_error",
        label : "Suspend on workflow ERROR",
        description : "Suspend on an ERROR in a workflow or task instead of rollback by default",
        type : "boolean",
        userConfigurable : false, 
        userMutable : true,
        hidden : false,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : false,
        value : "false", 
    },
    {
        key : "workflow_suspend_on_class_method",
        label : "Suspend on workflow class and method",
        description : "Suspend on a workflow when encounters Class.Method",
        type : "string",
        minLen : 1,
        userConfigurable : false,
        userMutable : true,
        hidden : true,
        advanced : false,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "",
    },
    {
        key : "validation_check",
        label : "Basic validation check performed on volumes and exports against the storage array",
        description : "Volume and Export checks are performed on the storage array to ensure management operations are performed on objects properly",
        type : "boolean",
        userConfigurable : false, 
        userMutable : true,
        hidden : true,
        advanced : false,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : false,
        value : "true", 
    },
    {
        key : "refresh_provider_on_validation",
        label : "Perform a refresh provider on validation operations.  Slows performance, but guarantees accurate results of array resources",
        description : "Perform a refresh provider on validation operations.  Slows performance, but guarantees accurate results of array resources",
        type : "boolean",
        userConfigurable : false, 
        userMutable : true,
        hidden : true,
        advanced : false,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : false,
        value : "false", 
    },
    {
        key : "artificial_failure",
        label : "internal failure invoker",
        description : "Invoke an error in the controller in an automated fashion to promote negative testing.  Internal Option Only.",
        type : "string",
        minLen : 1,
        userConfigurable : false, 
        userMutable : true,
        hidden : true,
        advanced : false,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : false,
        value : "", 
    },
    {
        key : "artificial_failure_counter_reset",
        label : "internal failure counter reset",
        description : "Used in conjunction with artificial_failure to reset the occurrence count of a particular invoked failure.  Internal Option Only.",
        type : "boolean",
        userConfigurable : false,
        userMutable : true,
        hidden : true,
        advanced : false,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : false,
        value : "true",
    },
    {
        key : "controller_file_operations_lock_timeout",
        label : "Timeout in seconds",
        description : "Timeout for VNX file Provisioning Locking",
        type : "uint32",
        userConfigurable : true,
        userMutable : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : false,
        value : "300",
    },
	{
        key : "controller_file_mount_operations_lock_timeout",
        label : "Timeout in seconds",
        description : "Timeout for Filesystem mount locking",
        type : "uint32",
        userConfigurable : true,
        userMutable : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : false,
        value : "300",
	},	
    {
        key : "system_syslog_enable",
        label : "Enable Remote Syslog",
        description : "Use Remote Syslog Forwarder.",
        type : "string",
        allowedValues : ( "True", "False" ),
        userConfigurable : false,
        userMutable : true,
        advanced : true,
        tag : "Syslog Forwarder",
        reconfigRequired : true,
        rebootRequired : true,
        notifiers : ( "syslog" ),
        controlNodeOnly : false,
        value : "False",
    },
    {
        key : "system_syslog_transport_protocol",
        label : "Syslog Transport Protocol",
        description : "List of acceptable transport options for Remote Syslog server transmission.",
        type : "string",
        maxLen : 3,
        allowedValues : ( "TCP", "UDP","TLS" ),
        userConfigurable : false,
        userMutable : true,
        advanced : true,
        tag : "Syslog Forwarder",
        reconfigRequired : true,
        rebootRequired : false,
        notifiers : ( "syslog" ),
        controlNodeOnly : false,
        value : "UDP",
    },
    {
        key : "system_syslog_driver_ca",
        label : " remote syslog server certificate file",
        description : "certifiacte file from remote syslog server",
        type : "text",
        maxLen : 8192,
        userConfigurable : false,
        userMutable : true,
        advanced : true,
        tag : "Syslog Forwarder",
        reconfigRequired : true,
        rebootRequired : false,
        notifiers : ( "syslog" ),
        controlNodeOnly : false,
    },
    {
        key : "network_syslog_remote_servers_ports",
        label : "Remote Syslog Servers &amp; Ports",
        description : "Syslog servers address &amp;  ports. Maximum number of servers is 6.",
        type : "ipportlist",
        userConfigurable : true,
        userMutable : true,
		advanced : true,
        tag : "Syslog Forwarder",
        reconfigRequired : true,
        rebootRequired : false,
        notifiers : ( "syslog" ),
        controlNodeOnly : false,
        value : "",
    },
    {
        key : "system_log_retention_days",
        label : "Log Retention in days",
        description : "Number of days for which controller logs should be retained. Allowed values are from 7 to 30. Logs will be removed even before this period if they exceed 10% of the data disk size.",
        type : "uint8",
        allowedValues : ( "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30"),
        userConfigurable : true,
        userMutable : true,
        hidden : false,
        advanced : false,
        tag : "Log Retention",
        reconfigRequired : true,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "30",
    },
    {
        key : "system_diagutil_min_cfs",
        type : "stringlist",
        userConfigurable : true,
        label : "List of Column Family names",
        description : "Optional list of CFs(separated by commas) for generating diagutils output",
        maxLen : 8192,
        userMutable : true,
        advanced : true,
        tag : "diagutil",
        reconfigRequired : true,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "BlockConsistencyGroup,BlockMirror,BlockSnapshot,Cluster,ExportGroup,ExportMask, FCZoneReference, Host, Initiator, Network, NetworkSystem,ProtectionSet,ProtectionSystem,StorageProvider,StoragePool,StoragePort,StorageSystem,Vcenter,VirtualArray,VirtualDataCenter,VirtualPool,Volume",
    },
    {
        key : "api_ingestion_allow_cluster_volumes_for_single_hosts",
        label : "Allow single hosts in a cluster to ingest shared volumes exclusively",
        description : "If true, the Ingest Exported Volumes service will allow single hosts in a cluster to ingest shared volumes exclusively.  This is useful if a single host Export Group is desired for a subset of the volumes shared by a cluster.  If false, shared volumes will not be listed as available for ingestion directly to a single host and must be ingested for the whole cluster, which is the default and recommended behavior.",
        type : "boolean",
        userConfigurable : true, 
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : false,
        value : "false", 
    },
    {
        key : "controller_pathadjust_require_suspend",
        label : "Require suspend to adjust paths to non-discoverable hosts",
        description : "Forces the task to suspend before removing paths if there are non-discoverable hosts",
        type : "boolean",
        userConfigurable : true,
        userMutable : true,
        hidden : true,
        advanced : false,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "true",
    },
	{
        key : "portal_service_timeout",
        label : "Portal Service GET Timeout",
        description : "Timeout value for Portal Service GET in minutes",
        type : "uint32",
        userConfigurable : true,
        userMutable : true,
		hidden : true,
        advanced : true,
        tag : "Other",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : true,
        value : "5",
    },
    {
        key : "resource_limit_project_volumes",
        label : "Volume Limit Per Project",
        description : "Maximum number of volumes allowed in a project",
        type : "uint32",
        userConfigurable : true,
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "Other",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "6000",
    },
    {
        key : "resource_limit_project_snapshots",
        label : "Block Snapshot Limit Per Project",
        description : "Maximum number of block snapshots allowed in a project",
        type : "uint32",
        userConfigurable : true,
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "Other",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "3000",
    },
    {
        key : "resource_limit_tenant_hosts",
        label : "Host Limit per Tenant",
        description : "Maximum number of hosts allowed in a tenant",
        type : "uint32",
        userConfigurable : true,
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "Other",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "5000",
    },
	{
        key : "strong_ciphers",
        label : "Cipher Suite",
        description : "Supported Cipher Suite for secure communication",
        type : "text",
        userConfigurable : true,
        userMutable : true,
		hidden : true,
        advanced : true,
        tag : "Security",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : true,
        value : "TLS_RSA_WITH_AES_128_CBC_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA",
    },
    {
        key : "custom_services_available",
        label : "Custom Services Available to this Deployment",
        description : "Custom Services Available to this Deployment",
        type : "boolean",
        userConfigurable : true,
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "Other",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "false",
	},
    {
        key : "controller_ucs_communication_timeout",
        label : "Cisco UCS Command Timeout",
        description : "Timeout value for Cisco UCS command in seconds",
        type : "uint32",
        userConfigurable : true,
        userMutable : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : false,
        value : "600",
    },
    {
        key : "controller_ucs_device_operation_pollfrequency",
        label : "Cisco UCS Device Operation Poll Frequency",
        description : "Poll frequency value for Cisco UCS device operation in seconds",
        type : "uint32",
        userConfigurable : true,
        userMutable : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : false,
        value : "15",
    },
    {
        key : "controller_job_queue_execution_timeout_minutes",
        label : "Job timeout minutes",
        description : "Maximum time in minutes before generic Job is timed out",
        type : "uint64",
        userConfigurable : true,
        userMutable : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : false,
        value : "1440",
    },
    {
        key : "controller_vplex_migration_timeout_minutes",
        label : "VPLEX migration timeout minutes",
        description : "Maximum time in minutes before VPLEX migration Job is timed out",
        type : "uint64",
        userConfigurable : true,
        userMutable : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : false,
        value : "10080",
    },
    {
        key : "controller_rp_link_state_wait_timeout",
        label : "RP Link State Wait Timeout in minutes",
        description : "Maximum time in minutes after which ViPR times out if CG is not in desired link state",
        type : "uint32",
        userConfigurable : true,
        userMutable : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : false,
        value : "15",
    },
    {
        key : "controller_sblim_wbem_client_http_timeout_minutes",
        label : "WBEM Client HTTP timeout in minutes",
        description : "The duration after which the HTTP request from the WBEM client is timed out when there is no response.",
        type : "uint32",
        userConfigurable : true,
        userMutable : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : true,
        controlNodeOnly : false,
        value : "240",
    },
    {
        key : "controller_sync_wrapper_timeout_minutes",
        label : "Task timeout for VMAX SMIS job in minutes",
        description : "The duration after which the SMIS job times out when it is not completed.",
        type : "uint32",
        userConfigurable : true,
        userMutable : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : false,
        value : "200",
    },
    {
        key : "custom_services_assetoptions",
        label : "Custom Services Available Asset Options",
        description : "Custom Services Available Asset Options",
        type : "text",
        userConfigurable : true,
        userMutable : true,
        hidden : true,
        advanced : true,
        tag : "Other",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : true,
        value : "assetType.vipr.blockVirtualPool,assetType.vipr.virtualArray,assetType.vipr.project,assetType.vipr.host",
    },
   {
        key : "xtremio_bulk_api",
        label : "Xtremio Bulk API Call",
        description : "Indicates whether to call Bulk api or not.Bulk APi call works with xtremio firmware version >= 4.0.27",
        type : "string",
        allowedValues : ( "true", "false" ),
        userConfigurable : true,
        userMutable : true,
        advanced : true,
        tag : "Controller",
        reconfigRequired : false,
        rebootRequired : false,
        controlNodeOnly : false,
        value : "true",
    },
]
